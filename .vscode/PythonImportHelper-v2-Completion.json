[
    {
        "label": "alteracao",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "exclusao",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "inclusao",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "listagem",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "titulo",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "url",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "titulo",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "url_login",
        "importPath": "crud",
        "description": "crud",
        "isExtraImport": true,
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "grafico_hoteis_mais_reservados",
        "importPath": "graphs",
        "description": "graphs",
        "isExtraImport": true,
        "detail": "graphs",
        "documentation": {}
    },
    {
        "label": "grafico_quartos_mais_reservados",
        "importPath": "graphs",
        "description": "graphs",
        "isExtraImport": true,
        "detail": "graphs",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "login",
        "description": "login",
        "isExtraImport": true,
        "detail": "login",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "pwinput",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pwinput",
        "description": "pwinput",
        "detail": "pwinput",
        "documentation": {}
    },
    {
        "label": "reservas",
        "kind": 5,
        "importPath": "tmp.test_data",
        "description": "tmp.test_data",
        "peekOfCode": "reservas = [\n        {\"hotelId\": 1, \"roomId\": 101},\n        {\"hotelId\": 1, \"roomId\": 102},\n        {\"hotelId\": 2, \"roomId\": 201},\n        {\"hotelId\": 3, \"roomId\": 301},\n        {\"hotelId\": 1, \"roomId\": 103},\n        {\"hotelId\": 2, \"roomId\": 202}\n    ]\nhoteis = [\n        {\"id\": 1, \"name\": \"Hotel A\"},",
        "detail": "tmp.test_data",
        "documentation": {}
    },
    {
        "label": "hoteis",
        "kind": 5,
        "importPath": "tmp.test_data",
        "description": "tmp.test_data",
        "peekOfCode": "hoteis = [\n        {\"id\": 1, \"name\": \"Hotel A\"},\n        {\"id\": 2, \"name\": \"Hotel B\"},\n        {\"id\": 3, \"name\": \"Hotel C\"}\n    ]",
        "detail": "tmp.test_data",
        "documentation": {}
    },
    {
        "label": "titulo",
        "kind": 2,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "def titulo(texto):\n    print()\n    print(texto)\n    print(\"-\" * 55) \nurl = \"http://localhost:3000/reservations\"\nurl_login = \"http://localhost:3000/login\"\nusuario_id = 0\ntoken = \"\"\n#### POST\ndef inclusao():",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "inclusao",
        "kind": 2,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "def inclusao():\n    titulo(\"Fazer uma reserva\")\n    if token == \"\":\n        print(\"Você precisa ter feito login para fazer uma reserva\")\n        return\n    descricao = input(\"Descricao......: \")\n    qtdDias = int(input(\"qtdDias.......: \"))\n    roomId = int(input(\"roomId: \"))\n    hotelId = int(input(\"hotelId: \"))\n    response = requests.post(url,",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "listagem",
        "kind": 2,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "def listagem():\n    titulo(\"Listagem das Reservas\")\n    response = requests.get(url)\n    if response.status_code != 200:\n        print(\"Erro... Não foi possível acessar a API\")\n        return\n    reservas = response.json()\n    print(f\"{'Id':<4} {'Descricao':<20} {'QtdDias':<10} {'UserId':<10} {'RoomId':<10}\")\n    print(\"-\" * 55) \n    for reserva in reservas:",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "alteracao",
        "kind": 2,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "def alteracao():\n    listagem()\n    if not token:\n        print(\"Você precisa estar logado para alterar reservas\")\n        return\n    id = int(input(\"\\nQual o ID da reserva a ser alterada? (0 para sair) -- \"))\n    reserva = requests.get(f\"{url}/{id}\").json()\n    # reserva = [x for x in reservas if x['id'] == id]\n    # if not reserva:\n    #     print(\"Erro. Informe um código existente\")",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "exclusao",
        "kind": 2,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "def exclusao():\n    if token == \"\":\n        print(\"Você precisa estar logado para excluir reservas\")\n        return\n    listagem()\n    id = int(input(\"\\nQual o ID da reserva a ser excluida? (0 para sair)\"))\n    if id == 0:\n        return\n    response = requests.get(url)\n    reservas = response.json()",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "url = \"http://localhost:3000/reservations\"\nurl_login = \"http://localhost:3000/login\"\nusuario_id = 0\ntoken = \"\"\n#### POST\ndef inclusao():\n    titulo(\"Fazer uma reserva\")\n    if token == \"\":\n        print(\"Você precisa ter feito login para fazer uma reserva\")\n        return",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "url_login",
        "kind": 5,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "url_login = \"http://localhost:3000/login\"\nusuario_id = 0\ntoken = \"\"\n#### POST\ndef inclusao():\n    titulo(\"Fazer uma reserva\")\n    if token == \"\":\n        print(\"Você precisa ter feito login para fazer uma reserva\")\n        return\n    descricao = input(\"Descricao......: \")",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "usuario_id",
        "kind": 5,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "usuario_id = 0\ntoken = \"\"\n#### POST\ndef inclusao():\n    titulo(\"Fazer uma reserva\")\n    if token == \"\":\n        print(\"Você precisa ter feito login para fazer uma reserva\")\n        return\n    descricao = input(\"Descricao......: \")\n    qtdDias = int(input(\"qtdDias.......: \"))",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "token",
        "kind": 5,
        "importPath": "crud",
        "description": "crud",
        "peekOfCode": "token = \"\"\n#### POST\ndef inclusao():\n    titulo(\"Fazer uma reserva\")\n    if token == \"\":\n        print(\"Você precisa ter feito login para fazer uma reserva\")\n        return\n    descricao = input(\"Descricao......: \")\n    qtdDias = int(input(\"qtdDias.......: \"))\n    roomId = int(input(\"roomId: \"))",
        "detail": "crud",
        "documentation": {}
    },
    {
        "label": "grafico_hoteis_mais_reservados",
        "kind": 2,
        "importPath": "graphs",
        "description": "graphs",
        "peekOfCode": "def grafico_hoteis_mais_reservados():\n    reservas = requests.get(url).json()\n    # if reservas.status_code != 200:\n    #     print(\"Erro: Não foi possível acessar a API\")\n    #     return\n    hoteis = requests.get(\"http://localhost:3000/hotels\").json()\n    x = [] \n    y = []  \n    hotel_reservas = {}\n    for r in reservas:",
        "detail": "graphs",
        "documentation": {}
    },
    {
        "label": "grafico_quartos_mais_reservados",
        "kind": 2,
        "importPath": "graphs",
        "description": "graphs",
        "peekOfCode": "def grafico_quartos_mais_reservados():\n    hotel = int(input(\"Id do hotel: \"))\n    todasReservas = requests.get(url).json()\n    reservas = []\n    for r in todasReservas:\n        if int(r['hotelId']) == hotel:\n            reservas.append(r)\n    print(reservas)\n    quarto_reservas = {}\n    for r in reservas:",
        "detail": "graphs",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "login",
        "description": "login",
        "peekOfCode": "def login():\n    # {\n    #     lorenzo@gmail.com\n    #     Lo12345@\n    # }\n    titulo(\"Login do Usuário\")\n    email = input(\"E-mail...: \")\n    password = pwinput.pwinput(prompt='Senha....: ')\n    response = requests.post(url_login, json={\n        \"email\": email,",
        "detail": "login",
        "documentation": {}
    }
]